class Jar:
    def __init__(self, capacity=12):
        if not isinstance(capacity, int) or capacity < 0:
            raise ValueError("Capacity must be a non-negative integer")
        self._capacity = capacity  # Private attribute
        self.cookies = 0  # Initially 0 cookies

    def __str__(self):
        return "🍪" * self.cookies  # Return a string of cookies

    def deposit(self, n):
        if self.cookies + n > self._capacity:
            raise ValueError("Not enough capacity in the jar")
        self.cookies += n  # Add cookies to the jar

    def withdraw(self, n):
        if self.cookies < n:
            raise ValueError("Not enough cookies in the jar")
        self.cookies -= n  # Remove cookies from the jar

    @property
    def capacity(self):
        return self._capacity

    @property
    def size(self):
        return self.cookies
